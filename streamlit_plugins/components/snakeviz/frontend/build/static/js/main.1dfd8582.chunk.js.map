{"version":3,"sources":["Provider.tsx","Snakeviz.tsx","index.tsx"],"names":["ErrorBoundary","_React$PureComponent","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","error","undefined","_createClass","key","value","this","_jsxs","children","_jsx","message","React","PureComponent","useNullableRenderData","_useState","useState","_useState2","_slicedToArray","renderData","setRenderData","useEffect","streamlitOnMessageEvent","onRenderEvent","event","detail","overrideEvent","onMessageEvent","data","regex","themeStyles","Array","from","document","head","querySelectorAll","forEach","style","css","textContent","exec","push","slice","removeChild","Streamlit","events","addEventListener","RENDER_EVENT","setComponentReady","type","window","onmessage","apiVersion","API_VERSION","parent","postMessage","_objectSpread","isStreamlitMessage","setOverrideComponentReady","removeEventListener","renderDataContext","createContext","StreamlitProvider","setFrameHeight","Provider","Snakeviz","contextValue","useContext","Error","useRenderData","color","theme","body","className","base","args","table_data","table_rows","callees","profile_name","stats","delayed_resize","wait_time","setTimeout","definedListeners","clickInside","console","log","$","ready","table","DataTable","row","scrollY","scrollCollapse","paging","on","name","sv_root_func_name","sv_draw_vis","sv_call_stack","sv_update_call_stack_list","prop","addClass","removeClass","init_d3_listeners","initial_setup","initial_call_stack","initial_draw","id","href","disabled","selected","map","i","index","textAlign","cellPadding","cellSpacing","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1dfd8582.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { Streamlit, RenderData, Theme } from \"streamlit-component-lib\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: React.ReactNode;\r\n}\r\ninterface ErrorBoundaryState {\r\n  error: Error | undefined;\r\n}\r\n\r\n/**\r\n * Shows errors thrown from child components.\r\n */\r\nclass ErrorBoundary extends React.PureComponent<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = { error: undefined };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error != null) {\r\n      return (\r\n        <div>\r\n          <h1>Component Error</h1>\r\n          <span>{this.state.error.message}</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n\r\n/** Post a message to the Streamlit app. */\r\nconst sendBackMsg = (type: string, data?: any): void => {\r\n  window.parent.postMessage(\r\n    {\r\n      isStreamlitMessage: true,\r\n      type: type,\r\n      ...data\r\n    },\r\n    \"*\"\r\n  );\r\n};\r\n\r\n/**\r\n * Returns `RenderData` received from Streamlit after the first render event received.\r\n */\r\nconst useNullableRenderData = (): RenderData | undefined => {\r\n  const [renderData, setRenderData] = useState<RenderData>();\r\n\r\n  useEffect(() => {\r\n    const onRenderEvent = (event: Event): void => {\r\n      const renderEvent = event as CustomEvent<RenderData>;\r\n      setRenderData(renderEvent.detail);\r\n    };\r\n\r\n    let overrideEvent = false;\r\n    let streamlitOnMessageEvent: Function | null;\r\n\r\n    const onMessageEvent = (event: MessageEvent): void => {\r\n      // TODO: Borrar del document: head, los styles que contengan el mismo texto consecutivo\r\n      let theme: Theme | undefined = event.data[\"theme\"];\r\n      if (theme) {\r\n        let regex = /:root \\{[^}]+\\}\\s+body \\{[^}]+\\}/;\r\n        const themeStyles: HTMLStyleElement[] = [];\r\n        Array.from(document.head\r\n          .querySelectorAll(\"style\"))\r\n          .forEach((style) => {\r\n            // console.log(el);\r\n            const css = style.textContent;\r\n            if (css){\r\n                const match = regex.exec(css);\r\n\r\n                if (match) {\r\n                  themeStyles.push(style);\r\n                }\r\n            }\r\n\r\n          });\r\n          themeStyles.slice(0,-1).forEach(style => {\r\n            document.head.removeChild(style);\r\n          });\r\n      }\r\n      // Se propaga el ultimo\r\n      if (streamlitOnMessageEvent) streamlitOnMessageEvent(event);\r\n    };\r\n\r\n    const setOverrideComponentReady = (): void => {\r\n      if (!overrideEvent) {\r\n        // Register for message events if we haven't already\r\n        streamlitOnMessageEvent = window.onmessage || (() => {});\r\n        window.addEventListener(\"message\", onMessageEvent);\r\n        overrideEvent = true;\r\n      }\r\n      sendBackMsg(\"streamlit:componentReady\", {\r\n        apiVersion: Streamlit.API_VERSION\r\n      });\r\n    };\r\n    // Set up event listeners, and signal to Streamlit that we're ready.\r\n    // We won't render the component until we receive the first RENDER_EVENT.\r\n    Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\r\n    Streamlit.setComponentReady();\r\n    setOverrideComponentReady();\r\n\r\n    const cleanup = () => {\r\n      Streamlit.events.removeEventListener(\r\n        Streamlit.RENDER_EVENT,\r\n        onRenderEvent\r\n      );\r\n    };\r\n    return cleanup;\r\n  }, []);\r\n\r\n  return renderData;\r\n};\r\n\r\nconst renderDataContext = React.createContext<RenderData | undefined>(\r\n  undefined\r\n);\r\n\r\n/**\r\n * Returns `RenderData` received from Streamlit.\r\n */\r\nexport const useRenderData = (): RenderData => {\r\n  const contextValue = useContext(renderDataContext);\r\n  if (contextValue == null) {\r\n    throw new Error(\r\n      \"useRenderData() must be used inside <StreamlitProvider />\"\r\n    );\r\n  }\r\n\r\n  return contextValue;\r\n};\r\n\r\n/**\r\n * Wrapper for React-hooks-based Streamlit components.\r\n *\r\n * Bootstraps the communication interface between Streamlit and the component.\r\n */\r\ninterface StreamlitProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nconst StreamlitProvider: React.VFC<StreamlitProviderProps> = (props) => {\r\n  const renderData = useNullableRenderData();\r\n\r\n  useEffect(() => {\r\n    Streamlit.setFrameHeight();\r\n  });\r\n\r\n  // Don't render until we've gotten our first data from Streamlit.\r\n  if (renderData == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <renderDataContext.Provider value={renderData}>\r\n        {props.children}\r\n      </renderDataContext.Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default StreamlitProvider;","\nimport { Streamlit, Theme, RenderData } from \"streamlit-component-lib\";\nimport React, { ReactNode, useState } from \"react\";\nimport { useRenderData } from \"./Provider\";\n\nimport useImportScript from './hooks';\n\nimport DataTable from 'datatables.net';\n\n// var $ = require( \"jquery\" );\n// $.extend(true, $.fn.dataTable.defaults, {\n//   paging: true,\n//   lengthChange: false,\n//   searching: false,\n//   processing: true,\n//   ordering: false,\n//   info: false,\n//   responsive: false,\n//   autoWidth: false,\n//   pageLength: 5,\n//   dom: '<\"top\"f>rtlip'\n// });\n\ntype TableRows = Array<Array<Array<string | number | Array<string>>>>;\ntype Callees = Record<string, Record<string, any>>;\n\ninterface PythonArgs {\n  table_rows: TableRows,\n  callees: Callees,\n  profile_name: string\n}\n\ninterface NavBarRenderData extends RenderData {\n  args: PythonArgs;\n  disabled: boolean;\n  theme?: Theme;\n}\n\ndeclare global {\n    interface Window {\n      stats: Callees;\n      initial_setup: () => void;\n      initial_call_stack: () => void;\n      initial_draw: () => void;\n\n      sv_root_func_name: string;\n      sv_draw_vis: (name: string) => void;\n      sv_call_stack: string[];\n      sv_update_call_stack_list: () => void;\n      init_d3_listeners: () => void;\n    }\n    interface Document {\n      definedListeners: boolean;\n      clickInside: boolean;\n    }\n}\n\n\n\nconst Snakeviz: React.VFC = () => {\n  const renderData: NavBarRenderData | undefined = useRenderData();\n\n//   useImportScript(\"/vendor/d3.v3.min.js\")\n//   useImportScript(\"/vendor/jquery.dataTables.min.js\")\n//   useImportScript(\"/vendor/lodash.min.js\")\n//   useImportScript(\"/vendor/immutable.min.js\")\n//   useImportScript(\"/static/snakeviz.js\")\n//   useImportScript(\"/static/drawsvg.js\")\n\n  if (renderData == null) {\n    return <div style={{ color: \"red\" }}>No hay renderData definida.</div>;\n  }\n\n  // Streamlit sends us a theme object via renderData that we can use to ensure\n  // that our component has visuals that match the active theme in a\n  // streamlit app.\n  const { theme } = renderData;\n\n  // Maintain compatibility with older versions of Streamlit that don't send\n  // a theme object.\n  if (!theme) {\n    return (\n      <div style={{ color: \"red\" }}>\n        Theme is undefined, please check streamlit version.\n      </div>\n    );\n  }\n\n  document.body.className = theme.base;\n\n  // setMenuDefinition(renderData.args.menu_definition);\n\n  const args: PythonArgs = renderData.args;\n  let table_data: TableRows = args.table_rows;\n  let callees: Callees = args.callees;\n  let profile_name: string = args.profile_name;\n\n  window.stats = window.stats || callees;\n\n  /* Functions definition */\n  const delayed_resize = (wait_time: number): NodeJS.Timeout =>\n    setTimeout(() => {\n      Streamlit.setFrameHeight();\n    }, wait_time);\n\n  const framed_resize = (): void => {\n    let lastHeight = document.body.scrollHeight;\n    const step_resize = () => {\n      Streamlit.setFrameHeight();\n      if (lastHeight !== document.body.scrollHeight)\n        requestAnimationFrame(step_resize);\n    };\n    Streamlit.setFrameHeight();\n    requestAnimationFrame(step_resize);\n  };\n\n  const snakeviz = () => {\n    return (\n      <div id=\"snakeviz-content\">\n        <h1 id=\"snakeviz-text\">\n          <a href=\"https://jiffyclub.github.io/snakeviz/\">SnakeViz</a>\n        </h1>\n\n        <div id=\"sv-error-div\" className=\"sv-error-msg\">\n          <p>\n            An error occurred processing your profile.\n            You can try a lower depth, a larger cutoff,\n            or try profiling a smaller portion of your code.\n            If you continue to have problems you can\n            <a href=\"https://github.com/jiffyclub/snakeviz/issues\">\n              contact us on GitHub</a>.\n          </p>\n          <div id=\"sv-error-close-div\" className=\"sv-error-close\">Close</div>\n        </div>\n\n        <div id=\"sv-call-stack\">\n          <div id=\"working-spinner\" className=\"spinner\">\n            <div className=\"bounce1\"></div>\n            <div className=\"bounce2\"></div>\n            <div className=\"bounce3\"></div>\n          </div>\n          <div style={{ \"display\": \"inline-block\" }}>\n            <button id=\"sv-call-stack-btn\">Call Stack</button>\n          </div>\n          <div id=\"sv-call-stack-list\"></div>\n        </div>\n\n        <div id=\"sv-diagram\">\n          <div id=\"sv-controls-content\">\n            <span id=\"resetbuttons\">\n              <div className=\"button-div\">\n                <button id=\"resetbutton-root\" disabled={true}>Reset Root</button>\n              </div>\n              <div className=\"button-div\">\n                <button id=\"resetbutton-zoom\" disabled={true}>Reset Zoom</button>\n              </div>\n            </span>\n\n            <label id='sv-style-label'>Style:&nbsp;\n              <select name=\"sv-style\" id=\"sv-style-select\">\n                <option value=\"icicle\" selected>Icicle</option>\n                <option value=\"sunburst\">Sunburst</option>\n              </select>\n            </label>\n\n            <label id='sv-depth-label'>Depth:&nbsp;\n              <select name=\"sv-depth\" id=\"sv-depth-select\">\n                {\n                  [3, 5, 10, 15, 20].map((i: number, index: number) => (\n                    <option value={i} selected={i === 10}>{i}</option>\n                  )\n                )}\n              </select>\n            </label>\n\n            <label id='sv-cutoff-label'>Cutoff:\n              <select name=\"sv-cutoff\" id=\"sv-cutoff-select\">\n                <option value=\"0.001\" selected>1 &frasl; 1000</option>\n                <option value=\"0.01\">1 &frasl; 100</option>\n                <option value=\"0\">None</option>\n              </select>\n            </label>\n\n            <div id=\"sv-info-div\"></div>\n          </div>\n\n          <div id=\"sv-chart-content\" style={{ textAlign: \"center\" }}>\n            <div id=\"chart\"></div>\n          </div>\n\n        </div>\n\n        <div id=\"table_div\">\n          <table cellPadding={0} cellSpacing={0} className=\"display\" id=\"pstats-table\">\n            <thead>\n              <tr>\n                <th title=\"Total number of calls to the function. If there are two numbers, that means the function recursed and the first is the total number of calls and the second is the number of primitive (non-recursive) calls.\">ncalls</th>\n                <th title=\"Total time spent in the function, not including time spent in calls to sub-functions.\">tottime</th>\n                <th title=\"`tottime` divided by `ncalls`\">percall</th>\n                <th title=\"Cumulative time spent in this function and all sub-functions.\">cumtime</th>\n                <th title=\"`cumtime` divided by `ncalls`\">percall</th>\n                <th title=\"File name and line number were the function is defined, and the function’s name.\">filename:lineno(function)</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n\n        <footer className=\"sv-footer\">\n          <a className=\"footer-link\" href=\"https://jiffyclub.github.io/snakeviz/\">SnakeViz Docs</a>\n        </footer>\n      </div>\n    );\n  };\n\n  const loseFocus = (): void => {\n    document.addEventListener('focusout', event => {\n      setTimeout(\n      () => {\n          if (!document.clickInside) {\n            console.log(\"FOCUSOUT FIRE\");\n          // framed_resize();\n            delayed_resize(50);\n          }\n          document.clickInside = false;\n      }, 50\n      )\n    });\n    document.addEventListener('click', event => {\n      document.clickInside = true;\n    });\n  }\n  const initListeners = (): void => {\n    // Make the stats table\n    // var table_data = {% raw table_rows %};\n\n    $(document).ready(function() {\n      var table = new DataTable('#pstats-table', {\n        'data': table_data,\n        'columns': [\n          // Note: columns are also defined in #pstats-table in HTML above,\n          // this list must line up with that.\n          {'type': 'num', 'searchable': false,\n           'data': {\n            '_': function (row: any) {return row[0][0];},\n            'sort': function (row: any) {return row[0][1]}\n           }},\n          {'type': 'num', 'searchable': false},\n          {'type': 'num', 'searchable': false},\n          {'type': 'num', 'searchable': false},\n          {'type': 'num', 'searchable': false},\n          {}\n        ],\n        'order': [1, 'desc'],\n         scrollY: '400px',\n         scrollCollapse: true,\n         paging: false\n      });\n      $('#pstats-table tbody').on('click', 'tr', function(this: any) {\n        var name = table.row(this).data()[6];\n        window.sv_root_func_name = name;\n        window.sv_draw_vis(name);\n        window.sv_call_stack = [name];\n        window.sv_update_call_stack_list();\n        $('#resetbutton-zoom').prop('disabled', true);\n        $('#resetbutton-root').prop('disabled', false);\n      }).on('mouseenter', 'tr', function (this: any) {\n        $(this).children('td').addClass('data-table-hover');\n      }).on('mouseleave', 'tr', function (this: any) {\n        $(this).children('td').removeClass('data-table-hover');\n      });\n\n      window.init_d3_listeners();\n\n      window.initial_setup();\n      window.initial_call_stack();\n      window.initial_draw();\n\n    });\n\n    // Initialize data\n    //$(document).ready(_.defer(function () {\n      \n    //}));\n    // Initialize the call stack button\n    //$(document).ready(_.defer(function () {\n      \n    //}));\n    // Draw the visualization\n    //$(document).ready(_.defer(function () {\n      \n    //}));\n  }\n\n  // DEFINE LISTENERSE ONE TIME\n  if (!document.definedListeners) document.definedListeners = false;\n  if (!document.clickInside) document.clickInside = false;\n  if (!document.definedListeners) {\n      document.definedListeners = true\n      loseFocus();\n      initListeners();\n  }\n  delayed_resize(500);\n  return snakeviz();\n};\n\n//export default withStreamlitConnection(NavBar);\nexport default Snakeviz;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Snakeviz from \"./Snakeviz\";\nimport StreamlitProvider from \"./Provider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n        <Snakeviz />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}