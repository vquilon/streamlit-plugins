{"version":3,"sources":["NavBarProvider.tsx","NavItem.jsx","NavSubItem.jsx","NavBar.tsx","index.tsx"],"names":["ErrorBoundary","React","PureComponent","constructor","props","super","this","state","error","undefined","getDerivedStateFromError","render","_jsxs","children","_jsx","message","useNullableRenderData","renderData","setRenderData","useState","useEffect","onRenderEvent","event","detail","streamlitOnMessageEvent","overrideEvent","onMessageEvent","data","regex","themeStyles","Array","from","document","head","querySelectorAll","forEach","style","css","textContent","exec","push","slice","removeChild","Streamlit","events","addEventListener","RENDER_EVENT","setComponentReady","setOverrideComponentReady","sendBackMsg","type","window","onmessage","apiVersion","API_VERSION","parent","postMessage","isStreamlitMessage","cleanup","removeEventListener","renderDataContext","createContext","StreamlitProvider","setFrameHeight","Provider","value","NavItem","menu_item","menuitem","is_active","menu_id","submenu_toggle","click_on_app","create_item","item","kid","ret_id","id","label","iconClass","iconTxt","input","c","cHex","codePointAt","sHex","toString","lHex","length","prefix","substring","indexOf","containsEmojis","icon","className","concat","href","onClick","onSelect","title","ttip","NavSubItem","menu_subitem","subitem","menuid","parent_id","create_submenuitem","item_id","subitem_id","NavBar","useRenderData","contextValue","useContext","Error","args","expandState","setExpandState","selectedAppId","setSelectedAppId","default_app_selected_id","selectedSubMenu","setSelectedSubMenu","expandSubMenu","setExpandSubMenu","blockState","setBlockState","override_app_selected_id","console","log","setComponentValue","handleResize","useCallback","lastHeight","body","scrollHeight","step_resize","requestAnimationFrame","handleClickOutside","hasFocus","delayed_resize","handleBlur","color","theme","wait_time","setTimeout","clickOnApp","itemId","toggleSubMenu","parentId","toggleNav","createMenu","key","isActive","submenu","map","subindex","createSubMenu","applyTheme","mergedTheme","menu_background","backgroundColor","txc_inactive","textColor","txc_active","option_active","primaryColor","overrideTheme","override_theme","renderNavBar","menuItems","addHomeLogin","menu_definition","home","unshift","login","marginLeft","menuLook","use_animation","selector","display","index","ReactDOM","StrictMode","getElementById"],"mappings":"iLAaA,MAAMA,UAAsBC,IAAMC,cAIhCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CAAEC,WAAOC,EACxB,CAEA,+BAAOC,CAAyBF,GAE9B,MAAO,CAAEA,QACX,CAEAG,SACE,OAAwB,MAApBL,KAAKC,MAAMC,MAEXI,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,oBACJC,cAAA,QAAAD,SAAOP,KAAKC,MAAMC,MAAMO,aAKvBT,KAAKF,MAAMS,QACpB,EAKF,MAcMG,EAAwBA,KAC5B,MAAOC,EAAYC,GAAiBC,qBAiEpC,OA/DAC,qBAAU,KACR,MAAMC,EAAiBC,IAErBJ,EADoBI,EACMC,OAAO,EAGnC,IACIC,EADAC,GAAgB,EAGpB,MAAMC,EAAkBJ,IAGtB,GAD+BA,EAAMK,KAAY,MACtC,CACT,IAAIC,EAAQ,mCACZ,MAAMC,EAAkC,GACxCC,MAAMC,KAAKC,SAASC,KACjBC,iBAAiB,UACjBC,SAASC,IAER,MAAMC,EAAMD,EAAME,YAClB,GAAID,EAAI,CACUT,EAAMW,KAAKF,IAGvBR,EAAYW,KAAKJ,EAEvB,KAGFP,EAAYY,MAAM,GAAG,GAAGN,SAAQC,IAC9BJ,SAASC,KAAKS,YAAYN,EAAM,GAEtC,CAEIZ,GAAyBA,EAAwBF,EAAM,EAgB7DqB,IAAUC,OAAOC,iBAAiBF,IAAUG,aAAczB,GAC1DsB,IAAUI,oBAdwBC,MAtDlBC,IAACC,EAAcvB,EAuDxBF,IAEHD,EAA0B2B,OAAOC,WAAS,MAAa,GACvDD,OAAON,iBAAiB,UAAWnB,GACnCD,GAAgB,GA3DHyB,EA6DH,2BA7DiBvB,EA6DW,CACtC0B,WAAYV,IAAUW,aA7D5BH,OAAOI,OAAOC,YACZ,CACEC,oBAAoB,EACpBP,KAAMA,KACHvB,GAEL,IAwDI,EAMJqB,GAQA,MANgBU,KACdf,IAAUC,OAAOe,oBACfhB,IAAUG,aACVzB,EACD,CAEW,GACb,IAEIJ,CAAU,EAGb2C,EAAoB3D,IAAM4D,mBAC9BpD,GA8CaqD,MArB+C1D,IAC5D,MAAMa,EAAaD,IAOnB,OALAI,qBAAU,KACRuB,IAAUoB,gBAAgB,IAIV,MAAd9C,EACK,KAIPH,cAACd,EAAa,CAAAa,SACZC,cAAC8C,EAAkBI,SAAQ,CAACC,MAAOhD,EAAWJ,SAC3CT,EAAMS,YAEK,E,KChGLqD,MAtEE9D,IACf,IAAI+D,EAAY/D,EAAMgE,SAClBC,EAAYjE,EAAMiE,UAClBC,EAAUlE,EAAMkE,QACpB,MAAMC,EAAiBnE,EAAMmE,eACvBC,EAAepE,EAAMoE,aA6D3B,MA1BoBC,EAACC,EAAMC,EAAKN,KAC9B,IAAIO,EAAS,GAEbA,EAASF,EAAKG,GAEd,IAAIC,EAAQ,GACRC,EAAY,GACZC,EAAU,GASd,MAjDsBC,KAEtB,GAAIA,EACF,IAAK,IAAIC,KAAKD,EAAO,CACjB,IAAIE,GAAQ,GAAKD,GAAGE,YAAY,GAChC,GAAGD,EAAM,CACT,IAAIE,EAAOF,EAAKG,SAAS,IACrBC,EAAOF,EAAKG,OACd,GAAID,EAAO,EAAG,CAEV,IAAIE,EAASJ,EAAKK,UAAU,EAAG,GAE/B,GAAa,IAATH,GAAyB,OAAXE,EACd,OAAO,EAGX,GAAa,IAATF,GACI,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMI,QAAQF,IAAW,EACtF,OAAO,CAEnB,CACJ,CACF,CAGF,OAAO,CAAK,EAgBRG,CAAelB,EAAKmB,OACtBb,EAAUN,EAAKmB,KACff,EAAQJ,EAAKI,QAEbC,EAAYL,EAAKmB,KACjBf,EAAQJ,EAAKI,OAIbhE,cAAA,MAAIsB,MAAOsC,EAAKtC,OAAS,CAAC,EAAG0D,UAAS,iBAAAC,OAAmB1B,EAAY,SAAU,IAAKxD,SAClFD,eAAA,KAAGkF,UAAU,WAAWE,KAAM,IAAMrB,EAAKsB,QAASA,KAAIC,OAvB1CrB,EAuBmDD,EAtBnEL,EAAe,SACfC,EAAaK,GAFGA,KAuB2D,EAAC,cAAY,UAAU,iBAAe,MAAM,YAAU,OAAOsB,MAAOzB,EAAK0B,KAAKvF,SAAA,CACjJC,cAAA,KAAGgF,UAAWf,EAAUlE,SAAEmE,IAC1BlE,cAAA,QAAAD,SAAOiE,QAH6EH,EAKrF,EAIFF,CAAYN,EAAWG,EAASD,EAAU,ECCpCgC,MAnEKjG,IAClB,IAAIkG,EAAelG,EAAMmG,QACrBjC,EAAUlE,EAAMoG,OAChBC,EAAYrG,EAAMqG,UAClBpC,EAAYjE,EAAMiE,UACtB,MAAME,EAAiBnE,EAAMmE,eACvBC,EAAepE,EAAMoE,aAyD3B,MAtB2BkC,EAAChC,EAAMC,EAAK8B,KACnC,IAAI3B,EAAQ,GACRC,EAAY,GACZC,EAAU,GASd,MA7CoBC,KAEtB,GAAIA,EACF,IAAK,IAAIC,KAAKD,EAAO,CACjB,IAAIE,GAAQ,GAAKD,GAAGE,YAAY,GAChC,GAAGD,EAAM,CACT,IAAIE,EAAOF,EAAKG,SAAS,IACrBC,EAAOF,EAAKG,OACd,GAAID,EAAO,EAAG,CAEV,IAAIE,EAASJ,EAAKK,UAAU,EAAG,GAE/B,GAAa,IAATH,GAAyB,OAAXE,EACd,OAAO,EAGX,GAAa,IAATF,GACI,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMI,QAAQF,IAAW,EACtF,OAAO,CAEnB,CACJ,CACF,CAGF,OAAO,CAAK,EAYNG,CAAelB,EAAKmB,OACtBb,EAAUN,EAAKmB,KACff,EAAQJ,EAAKI,QAEbC,EAAYL,EAAKmB,KACjBf,EAAQJ,EAAKI,OAIbhE,cAAA,MAAIgF,UAAWzB,EAAY,SAAU,GAAGxD,SACpCD,eAAA,KAAGkF,UAAU,gBAAgBE,KAAM,IAAU,GAAJrB,EAAQsB,QAASA,KAAIC,OAnBtDS,EAmB+DF,EAnB9CG,EAmByDlC,EAAKG,GAlB/FN,EAAeoC,QACfnC,EAAamC,EAASC,GAFPV,IAACS,EAAiBC,CAmBkE,EAAC,cAAY,UAAU,iBAAe,MAAM,YAAU,OAAOT,MAAOzB,EAAK0B,KAAKvF,SAAA,CACrKC,cAAA,KAAGgF,UAAWf,EAAUlE,SAAEmE,IAC1BlE,cAAA,QAAAD,SAAOiE,QAH+B2B,EAAc,GAAJ9B,EAKnD,EAIJ+B,CAAmBJ,EAAchC,EAASmC,EAAU,E,MC+T9CI,MAvVWA,KACxB,MAAM5F,EH0FqB6F,MAC3B,MAAMC,EAAeC,qBAAWpD,GAChC,GAAoB,MAAhBmD,EACF,MAAM,IAAIE,MACR,6DAIJ,OAAOF,CAAY,EGlGAD,GAEbI,EAAmBjG,EAAWiG,MAE7BC,EAAaC,GAAkBjG,oBAAS,IACxCkG,EAAeC,GAAoBnG,mBAAiB+F,EAAKK,0BACzDC,EAAiBC,GAAsBtG,mBAAwB,OAC/DuG,EAAeC,GAAoBxG,oBAAS,IAC5CyG,EAAYC,GAAiB1G,mBAAS,QAG7CC,qBAAU,KACJ8F,EAAKY,2BACPC,QAAQC,IAAId,EAAKY,0BACjBR,EAAiBJ,EAAKY,0BACtBV,GAAe,GACfS,EAAc,QACdF,GAAiB,GACjBhF,IAAUsF,kBAAkBf,EAAKY,0BACnC,GACC,CAACZ,EAAKY,2BAET,MAAMI,EAAeC,uBAAY,KAC/B,IAAIC,EAAapG,SAASqG,KAAKC,aAC/B,MAAMC,EAAcA,KAClB5F,IAAUoB,iBACNqE,IAAepG,SAASqG,KAAKC,cAC/BE,sBAAsBD,EAAY,EAEtC5F,IAAUoB,iBACVyE,sBAAsBD,EAAY,GACjC,IAsCH,GApCAnH,qBAAU,KACR8G,IACA/E,OAAON,iBAAiB,SAAUqF,GAC3B,KACL/E,OAAOQ,oBAAoB,SAAUuE,EAAa,IAEnD,CAACA,IAGJ9G,qBAAU,KACR,MAAMqH,EAAsBnH,IACrBU,SAAS0G,aACZtB,GAAe,GACfS,EAAc,QACdF,GAAiB,GACjBgB,EAAe,IACjB,EAGIC,EAAaA,KACjBxB,GAAe,GACfS,EAAc,QACdF,GAAiB,GAEjBgB,EAAe,GAAG,EAMpB,OAHAxF,OAAON,iBAAiB,OAAQ+F,GAChC5G,SAASa,iBAAiB,QAAS4F,GAE5B,KACLtF,OAAOQ,oBAAoB,OAAQiF,GACnC5G,SAAS2B,oBAAoB,QAAS8E,EAAmB,CAC1D,GACA,KAEExH,EACH,OAAOH,cAAA,OAAKsB,MAAO,CAAEyG,MAAO,OAAQhI,SAAC,gCAMvC,MAAM,MAAEiI,GAAU7H,EAIlB,IAAK6H,EACH,OACEhI,cAAA,OAAKsB,MAAO,CAAEyG,MAAO,OAAQhI,SAAC,wDAkBlC,MAAM8H,EAAkBI,GACtBC,YAAW,KACTrG,IAAUoB,gBAAgB,GACzBgF,GAaEnD,EAAkBX,IACvB,GAAIA,EACF,IAAK,MAAMC,KAAKD,EAAO,CACrB,MAAME,EAAOD,EAAEE,YAAY,GAC3B,GAAID,EAAM,CACR,MAAME,EAAOF,EAAKG,SAAS,IACrBC,EAAOF,EAAKG,OAClB,GAAID,EAAO,EAAG,CACZ,MAAME,EAASJ,EAAKK,UAAU,EAAG,GAEjC,GAAa,IAATH,GAAyB,OAAXE,EAChB,OAAO,EAGT,GAAa,IAATF,EACF,MACE,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMI,QAAQF,IAAW,CAG5F,CACF,CACF,CAEF,OAAO,CAAK,EAcRwD,EAAcC,IAClB5B,EAAiB4B,GACjB9B,GAAe,GACfS,EAAc,QACdF,GAAiB,GACjBO,IACAvF,IAAUsF,kBAAkBiB,EAAO,EAG/BC,EAAiBC,IACjB5B,IAAoB4B,EACtBzB,GAAkBD,IAElBC,GAAiB,GACjBF,EAAmB2B,IAErBlB,GAAc,EAeVmB,EAAYA,KAChBjC,GAAgBD,GAChBU,EAAcV,EAAc,OAAS,SACrCQ,GAAiB,GACjBO,GAAc,EAGVoB,EAAaA,CAAC5E,EAAgB6E,KAClC,MAAMC,EAAW9E,EAAKG,KAAOwC,EACvBtC,EAAYa,EAAelB,EAAKmB,MAAQ,GAAKnB,EAAKmB,KAClDb,EAAUY,EAAelB,EAAKmB,MAAQnB,EAAKmB,KAAO,GAaxD,OAAInB,EAAK+E,QAEL7I,eAAA,MACEwB,MAAOsC,EAAKtC,MACZ0D,UAAS,0BAAAC,OAA4ByD,EAAW,SAAW,IAAK3I,SAAA,CAGhED,eAAA,KACEkF,UAAU,2BACVE,KAAM,QAAUuD,EAEhBtD,QAASA,IAAMkD,EAAczE,EAAKG,IAClC,cAAY,UACZ,iBAAe,MACf,YAAU,OACVsB,MAAOzB,EAAK0B,KAAKvF,SAAA,CAEjBC,cAAA,KAAGgF,UAAWf,EAAUlE,SAAEmE,IAC1BlE,cAAA,QAAAD,SAAO6D,EAAKI,UARP,QAAUyE,GAUjBzI,cAAA,MAAoBgF,UAAS,iBAAAC,OAAmByB,IAAoB9C,EAAKG,IAAM6C,EAAgB,OAAS,IAAK7G,SAC1G6D,EAAK+E,QAAQC,KAAI,CAACnD,EAAmBoD,IAxD1BC,EAAClF,EAAgB6E,IACrCzI,cAACuF,EAAU,CACTE,QAAS7B,EACTJ,QAASiF,EACThF,eAAgB4E,EAChB3E,aAAcyE,EACdxC,UAAW/B,EAAKG,GAEhBR,UAAWK,EAAKG,KAAOwC,GADlBkC,GAiD4DK,CAAcrD,EAASoD,MADrE,IAANJ,KAfE,IAANA,GAsBPzI,cAACoD,EAAO,CACNE,SAAUM,EACVJ,QAASiF,EACTlF,UAAWmF,EACXjF,eAAgB4E,EAChB3E,aAAcyE,GACH,IAANM,EAGX,EAGIM,EAAaA,KACjB,MAAMC,EAAc,CAClBC,gBAAiBjB,EAAMkB,iBAAmB,UAC1CC,aAAcnB,EAAMoB,WAAa,UACjCC,WAAYrB,EAAMoB,WAAa,UAC/BE,cAAetB,EAAMuB,cAAgB,WAGjCC,EAAgBpD,EAAKqD,eAQ3B,OAPID,IACFR,EAAYC,gBAAkBO,EAAcP,iBAAmBD,EAAYC,gBAC3ED,EAAYG,aAAeK,EAAcL,cAAgBH,EAAYG,aACrEH,EAAYK,WAAaG,EAAcH,YAAcL,EAAYK,WACjEL,EAAYM,cAAgBE,EAAcF,eAAiBN,EAAYM,eAIvEtJ,cAAA,SAAAD,SAAA,uDAAAkF,OAG2B+D,EAAYC,gBAAe,mCAAAhE,OAC9B+D,EAAYG,aAAY,iCAAAlE,OAC1B+D,EAAYK,WAAU,oCAAApE,OACnB+D,EAAYM,cAAa,4CAAArE,OACjB+C,EAAMuB,aAAY,kDAAAtE,OACd+C,EAAMuB,aAAY,+BAG/C,EAgEZ,MA5DqBG,MACnB,MAAMC,EAzIaC,MACnB,MAAMD,EAAY,IAAIvD,EAAKyD,iBAO3B,OANIzD,EAAK0D,MACPH,EAAUI,QAAQ3D,EAAK0D,MAErB1D,EAAK4D,OACPL,EAAUjI,KAAK,IAAK0E,EAAK4D,MAAO1I,MAAO,CAAE2I,WAAY,UAEhDN,CAAS,EAiIEC,GACZM,EAAW9D,EAAK+D,cAAgB,gCAAkC,yBAClEC,EAAWhE,EAAK+D,cACpBrK,eAAA,OAAKkF,UAAU,gBAAejF,SAAA,CAC5BC,cAAA,OAAKgF,UAAU,SACfhF,cAAA,OAAKgF,UAAU,aAEf,KAEJ,OACElF,eAAA,OAAAC,SAAA,CACGgJ,IACDjJ,eAAA,OAAKkF,UAAU,+DAA8DjF,SAAA,CAC3EC,cAAA,UACEgF,UAAU,iBACV5C,KAAK,SACL+C,QAASoD,EACT,gBAAelC,EAAYtG,SAE3BC,cAAA,KAAGgF,UAAU,6BAEfhF,cAAA,OAAK+D,GAAImG,EAAUlF,UAAU,kBAAkB1D,MAAO,CAAE+I,QAASvD,GAAa/G,SAC5ED,eAAA,MAAIkF,UAAU,kBAAiBjF,SAAA,CAC5BqK,EACAT,EAAUf,KAAI,CAAChF,EAAgB0G,IAAkB9B,EAAW5E,EAAM0G,eAdjElE,EAAKqC,IAkBT,EA+BHiB,EAAc,ECxXvBa,IAAS1K,OACPG,cAACb,IAAMqL,WAAU,CAAAzK,SACfC,cAACgD,EAAiB,CAAAjD,SACdC,cAAC+F,EAAM,QAGb7E,SAASuJ,eAAe,Q","file":"static/js/main.1d7a709c.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { Streamlit, RenderData, Theme } from \"streamlit-component-lib\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: React.ReactNode;\r\n}\r\ninterface ErrorBoundaryState {\r\n  error: Error | undefined;\r\n}\r\n\r\n/**\r\n * Shows errors thrown from child components.\r\n */\r\nclass ErrorBoundary extends React.PureComponent<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = { error: undefined };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error != null) {\r\n      return (\r\n        <div>\r\n          <h1>Component Error</h1>\r\n          <span>{this.state.error.message}</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n\r\n/** Post a message to the Streamlit app. */\r\nconst sendBackMsg = (type: string, data?: any): void => {\r\n  window.parent.postMessage(\r\n    {\r\n      isStreamlitMessage: true,\r\n      type: type,\r\n      ...data\r\n    },\r\n    \"*\"\r\n  );\r\n};\r\n\r\n/**\r\n * Returns `RenderData` received from Streamlit after the first render event received.\r\n */\r\nconst useNullableRenderData = (): RenderData | undefined => {\r\n  const [renderData, setRenderData] = useState<RenderData>();\r\n\r\n  useEffect(() => {\r\n    const onRenderEvent = (event: Event): void => {\r\n      const renderEvent = event as CustomEvent<RenderData>;\r\n      setRenderData(renderEvent.detail);\r\n    };\r\n\r\n    let overrideEvent = false;\r\n    let streamlitOnMessageEvent: Function | null;\r\n\r\n    const onMessageEvent = (event: MessageEvent): void => {\r\n      // TODO: Borrar del document: head, los styles que contengan el mismo texto consecutivo\r\n      let theme: Theme | undefined = event.data[\"theme\"];\r\n      if (theme) {\r\n        let regex = /:root \\{[^}]+\\}\\s+body \\{[^}]+\\}/;\r\n        const themeStyles: HTMLStyleElement[] = [];\r\n        Array.from(document.head\r\n          .querySelectorAll(\"style\"))\r\n          .forEach((style) => {\r\n            // console.log(el);\r\n            const css = style.textContent;\r\n            if (css){\r\n                const match = regex.exec(css);\r\n\r\n                if (match) {\r\n                  themeStyles.push(style);\r\n                }\r\n            }\r\n\r\n          });\r\n          themeStyles.slice(0,-1).forEach(style => {\r\n            document.head.removeChild(style);\r\n          });\r\n      }\r\n      // Se propaga el ultimo\r\n      if (streamlitOnMessageEvent) streamlitOnMessageEvent(event);\r\n    };\r\n\r\n    const setOverrideComponentReady = (): void => {\r\n      if (!overrideEvent) {\r\n        // Register for message events if we haven't already\r\n        streamlitOnMessageEvent = window.onmessage || (() => {});\r\n        window.addEventListener(\"message\", onMessageEvent);\r\n        overrideEvent = true;\r\n      }\r\n      sendBackMsg(\"streamlit:componentReady\", {\r\n        apiVersion: Streamlit.API_VERSION\r\n      });\r\n    };\r\n    // Set up event listeners, and signal to Streamlit that we're ready.\r\n    // We won't render the component until we receive the first RENDER_EVENT.\r\n    Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\r\n    Streamlit.setComponentReady();\r\n    setOverrideComponentReady();\r\n\r\n    const cleanup = () => {\r\n      Streamlit.events.removeEventListener(\r\n        Streamlit.RENDER_EVENT,\r\n        onRenderEvent\r\n      );\r\n    };\r\n    return cleanup;\r\n  }, []);\r\n\r\n  return renderData;\r\n};\r\n\r\nconst renderDataContext = React.createContext<RenderData | undefined>(\r\n  undefined\r\n);\r\n\r\n/**\r\n * Returns `RenderData` received from Streamlit.\r\n */\r\nexport const useRenderData = (): RenderData => {\r\n  const contextValue = useContext(renderDataContext);\r\n  if (contextValue == null) {\r\n    throw new Error(\r\n      \"useRenderData() must be used inside <StreamlitProvider />\"\r\n    );\r\n  }\r\n\r\n  return contextValue;\r\n};\r\n\r\n/**\r\n * Wrapper for React-hooks-based Streamlit components.\r\n *\r\n * Bootstraps the communication interface between Streamlit and the component.\r\n */\r\ninterface StreamlitProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nconst StreamlitProvider: React.VFC<StreamlitProviderProps> = (props) => {\r\n  const renderData = useNullableRenderData();\r\n\r\n  useEffect(() => {\r\n    Streamlit.setFrameHeight();\r\n  });\r\n\r\n  // Don't render until we've gotten our first data from Streamlit.\r\n  if (renderData == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <renderDataContext.Provider value={renderData}>\r\n        {props.children}\r\n      </renderDataContext.Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default StreamlitProvider;","import React from \"react\"\r\nimport \"./bootstrap.min.css\"\r\n\r\nconst NavItem = (props) => {\r\n  let menu_item = props.menuitem;\r\n  let is_active = props.is_active;\r\n  let menu_id = props.menu_id;\r\n  const submenu_toggle = props.submenu_toggle;\r\n  const click_on_app = props.click_on_app;\r\n\r\n  const containsEmojis = (input) => {\r\n\r\n    if (input) {\r\n      for (var c of input) {\r\n          var cHex = (\"\" + c).codePointAt(0);\r\n          if(cHex) {\r\n          var sHex = cHex.toString(16);\r\n          var lHex = sHex.length;\r\n            if (lHex > 3) {\r\n\r\n                var prefix = sHex.substring(0, 2);\r\n\r\n                if (lHex === 5 && prefix === \"1f\") {\r\n                    return true;\r\n                }\r\n\r\n                if (lHex === 4) {\r\n                    if ([\"20\", \"21\", \"23\", \"24\", \"25\", \"26\", \"27\", \"2B\", \"29\", \"30\", \"32\"].indexOf(prefix) > -1)\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  const onSelect = (id) => {\r\n    submenu_toggle(\"\");\r\n    click_on_app(id);\r\n  }\r\n\r\n  const create_item = (item, kid, is_active) => {\r\n    let ret_id = \"\";\r\n\r\n    ret_id = item.id;\r\n\r\n    let label = \"\";\r\n    let iconClass = \"\";\r\n    let iconTxt = \"\";\r\n    if (containsEmojis(item.icon)) {\r\n      iconTxt = item.icon\r\n      label = item.label;\r\n    } else {\r\n      iconClass = item.icon;\r\n      label = item.label;\r\n    }\r\n\r\n    return (\r\n      <li style={item.style || {}} className={`nav-item py-0 ${is_active ? \"active\": \"\"}`} key={kid}>\r\n        <a className=\"nav-link\" href={\"#\" + kid} onClick={()=>onSelect(ret_id)} data-toggle=\"tooltip\" data-placement=\"top\" data-html=\"true\" title={item.ttip}>\r\n            <i className={iconClass}>{iconTxt}</i>\r\n            <span>{label}</span>\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  return create_item(menu_item, menu_id, is_active);\r\n\r\n}\r\n\r\nexport default NavItem","import React from \"react\"\r\nimport \"./bootstrap.min.css\"\r\n\r\nconst NavSubItem = (props) => {\r\n  let menu_subitem = props.subitem;\r\n  let menu_id = props.menuid;\r\n  let parent_id = props.parent_id;\r\n  let is_active = props.is_active;\r\n  const submenu_toggle = props.submenu_toggle;\r\n  const click_on_app = props.click_on_app;\r\n\r\n  const containsEmojis = (input) => {\r\n\r\n    if (input) {\r\n      for (var c of input) {\r\n          var cHex = (\"\" + c).codePointAt(0);\r\n          if(cHex) {\r\n          var sHex = cHex.toString(16);\r\n          var lHex = sHex.length;\r\n            if (lHex > 3) {\r\n\r\n                var prefix = sHex.substring(0, 2);\r\n\r\n                if (lHex === 5 && prefix === \"1f\") {\r\n                    return true;\r\n                }\r\n\r\n                if (lHex === 4) {\r\n                    if ([\"20\", \"21\", \"23\", \"24\", \"25\", \"26\", \"27\", \"2B\", \"29\", \"30\", \"32\"].indexOf(prefix) > -1)\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  const onSelect = (item_id: string, subitem_id: string) => {\r\n    submenu_toggle(item_id);\r\n    click_on_app(item_id, subitem_id);\r\n  }\r\n\r\n  const create_submenuitem = (item, kid, parent_id) => {\r\n      let label = \"\";\r\n      let iconClass = \"\";\r\n      let iconTxt = \"\";\r\n      if (containsEmojis(item.icon)) {\r\n        iconTxt = item.icon\r\n        label = item.label;\r\n      } else {\r\n        iconClass = item.icon;\r\n        label = item.label;\r\n      }\r\n\r\n      return (\r\n        <li className={is_active ? \"active\": \"\"} key={parent_id+kid*97}>\r\n            <a className=\"dropdown-item\" href={\"#\" + kid*97} onClick={()=>onSelect(parent_id, item.id)} data-toggle=\"tooltip\" data-placement=\"top\" data-html=\"true\" title={item.ttip}>\r\n                <i className={iconClass}>{iconTxt}</i>\r\n                <span>{label}</span>\r\n            </a>\r\n        </li>\r\n      );\r\n  }\r\n  \r\n  return create_submenuitem(menu_subitem, menu_id, parent_id);\r\n\r\n}\r\n\r\nexport default NavSubItem","import { Streamlit, Theme, RenderData } from \"streamlit-component-lib\";\nimport React, { ReactNode, useState, useEffect, useCallback } from \"react\";\nimport { useRenderData } from \"./NavBarProvider\";\nimport NavItem from \"./NavItem.jsx\";\nimport NavSubItem from \"./NavSubItem.jsx\";\nimport \"./bootstrap.min.css\";\nimport \"./custom.css\";\n\ninterface MenuItem {\n  icon: string;\n  id: string;\n  label: string;\n  ttip?: string;\n  submenu?: MenuItem[];\n  style?: React.CSSProperties;\n}\n\ninterface OverrideTheme {\n  menu_background: string;\n  txc_inactive: string;\n  txc_active: string;\n  option_active: string;\n}\n\ninterface PythonArgs {\n  menu_definition: MenuItem[];\n  home: MenuItem;\n  login: MenuItem;\n  use_animation: boolean;\n  override_theme: OverrideTheme;\n  default_app_selected_id: string;\n  override_app_selected_id?: string;\n  key?: string;\n  fvalue?: boolean;\n}\n\ninterface NavBarRenderData extends RenderData {\n  args: PythonArgs;\n  disabled: boolean;\n  theme?: Theme;\n}\n\nconst NavBar: React.VFC = () => {\n  const renderData = useRenderData<NavBarRenderData>();\n\n  const args: PythonArgs = renderData.args;\n\n  const [expandState, setExpandState] = useState(false);\n  const [selectedAppId, setSelectedAppId] = useState<string>(args.default_app_selected_id);\n  const [selectedSubMenu, setSelectedSubMenu] = useState<string | null>(null);\n  const [expandSubMenu, setExpandSubMenu] = useState(false);\n  const [blockState, setBlockState] = useState(\"none\");\n\n  // Handle override_app_selected_id updates\n  useEffect(() => {\n    if (args.override_app_selected_id) {\n      console.log(args.override_app_selected_id);\n      setSelectedAppId(args.override_app_selected_id);\n      setExpandState(false);\n      setBlockState(\"none\");\n      setExpandSubMenu(false);\n      Streamlit.setComponentValue(args.override_app_selected_id);\n    }\n  }, [args.override_app_selected_id]);\n\n  const handleResize = useCallback(() => {\n    let lastHeight = document.body.scrollHeight;\n    const step_resize = () => {\n      Streamlit.setFrameHeight();\n      if (lastHeight !== document.body.scrollHeight)\n        requestAnimationFrame(step_resize);\n    };\n    Streamlit.setFrameHeight();\n    requestAnimationFrame(step_resize);\n  }, []);\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [handleResize]);\n\n  // Improved loseFocus function to detect clicks outside the iframe\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (!document.hasFocus()) {\n        setExpandState(false);\n        setBlockState(\"none\");\n        setExpandSubMenu(false);\n        delayed_resize(50);\n      }\n    };\n\n    const handleBlur = () => {\n      setExpandState(false);\n      setBlockState(\"none\");\n      setExpandSubMenu(false);\n\n      delayed_resize(50);\n    };\n\n    window.addEventListener(\"blur\", handleBlur);\n    document.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"blur\", handleBlur);\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  if (!renderData) {\n    return <div style={{ color: \"red\" }}>No hay renderData definida.</div>;\n  }\n\n  // Streamlit sends us a theme object via renderData that we can use to ensure\n  // that our component has visuals that match the active theme in a\n  // streamlit app.\n  const { theme } = renderData;\n\n  // Maintain compatibility with older versions of Streamlit that don't send\n  // a theme object.\n  if (!theme) {\n    return (\n      <div style={{ color: \"red\" }}>\n        Theme is undefined, please check streamlit version.\n      </div>\n    );\n  }\n\n  // setMenuDefinition(renderData.args.menu_definition);\n//   let _app_selected_id: string = selected_app_id;\n  // let menu_definition: MenuItem[] = args.menu_definition;\n//   let override_app_selected_id: string = args.override_app_selected_id || null;\n//   if (override_app_selected_id) {\n//     if (override_app_selected_id !== _app_selected_id) {\n// //       setSelectedAppId(override_app_selected_id);\n//       _app_selected_id = override_app_selected_id;\n//     }\n//   }\n\n  /* Functions definition */\n  const delayed_resize = (wait_time: number): NodeJS.Timeout =>\n    setTimeout(() => {\n      Streamlit.setFrameHeight();\n    }, wait_time);\n\n//   const framed_resize = (): void => {\n//     let lastHeight = document.body.scrollHeight;\n//     const step_resize = () => {\n//       Streamlit.setFrameHeight();\n//       if (lastHeight !== document.body.scrollHeight)\n//         requestAnimationFrame(step_resize);\n//     };\n//     Streamlit.setFrameHeight();\n//     requestAnimationFrame(step_resize);\n//   };\n\n   const containsEmojis = (input: string): boolean => {\n    if (input) {\n      for (const c of input) {\n        const cHex = c.codePointAt(0);\n        if (cHex) {\n          const sHex = cHex.toString(16);\n          const lHex = sHex.length;\n          if (lHex > 3) {\n            const prefix = sHex.substring(0, 2);\n\n            if (lHex === 5 && prefix === \"1f\") {\n              return true;\n            }\n\n            if (lHex === 4) {\n              return (\n                [\"20\", \"21\", \"23\", \"24\", \"25\", \"26\", \"27\", \"2B\", \"29\", \"30\", \"32\"].indexOf(prefix) > -1\n              );\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const addHomeLogin = (): MenuItem[] => {\n    const menuItems = [...args.menu_definition];\n    if (args.home) {\n      menuItems.unshift(args.home);\n    }\n    if (args.login) {\n      menuItems.push({ ...args.login, style: { marginLeft: \"auto\" } });\n    }\n    return menuItems;\n  };\n\n  const clickOnApp = (itemId: string): void => {\n    setSelectedAppId(itemId);\n    setExpandState(false);\n    setBlockState(\"none\");\n    setExpandSubMenu(false);\n    handleResize();\n    Streamlit.setComponentValue(itemId);\n  };\n\n  const toggleSubMenu = (parentId: string): void => {\n    if (selectedSubMenu === parentId) {\n      setExpandSubMenu(!expandSubMenu);\n    } else {\n      setExpandSubMenu(true);\n      setSelectedSubMenu(parentId);\n    }\n    handleResize();\n  };\n\n  const createSubMenu = (item: MenuItem, key: number): JSX.Element => (\n    <NavSubItem\n      subitem={item}\n      menu_id={key}\n      submenu_toggle={toggleSubMenu}\n      click_on_app={clickOnApp}\n      parent_id={item.id}\n      key={key}\n      is_active={item.id === selectedAppId}\n    />\n  );\n\n  const toggleNav = (): void => {\n    setExpandState(!expandState);\n    setBlockState(expandState ? \"none\" : \"block\");\n    setExpandSubMenu(false);\n    handleResize();\n  };\n\n  const createMenu = (item: MenuItem, key: number): JSX.Element => {\n    const isActive = item.id === selectedAppId;\n    const iconClass = containsEmojis(item.icon) ? \"\" : item.icon;\n    const iconTxt = containsEmojis(item.icon) ? item.icon : \"\";\n//     if (!selected_app_id) {\n//       if (key === first_select) {\n//         // isActive = true;\n//         setSelectedAppId(item.id);\n//       }\n//     }\n//     if (item.id === override_app_selected_id && selected_app_id !== override_app_selected_id) {\n//       // isActive = true;\n//       setSelectedAppId(override_app_selected_id);\n//       override_app_selected_id = \"\";\n//     }\n    // if (Array.isArray(item.submenu)) {\n    if (item.submenu) {\n      return (\n        <li\n          style={item.style}\n          className={`nav-item py-0 dropdown ${isActive ? \"active\" : \"\"}`}\n          key={key * 100}\n        >\n          <a\n            className=\"nav-link dropdown-toggle\"\n            href={\"#_sub\" + key}\n            key={\"sub1_\" + key}\n            onClick={() => toggleSubMenu(item.id)}\n            data-toggle=\"tooltip\"\n            data-placement=\"top\"\n            data-html=\"true\"\n            title={item.ttip}\n          >\n            <i className={iconClass}>{iconTxt}</i>\n            <span>{item.label}</span>\n          </a>\n          <ul key={key * 103} className={`dropdown-menu ${selectedSubMenu === item.id && expandSubMenu ? \"show\" : \"\"}`}>\n            {item.submenu.map((subitem: MenuItem, subindex: number) => createSubMenu(subitem, subindex))}\n          </ul>\n        </li>\n      );\n    } else {\n      return (\n        <NavItem\n          menuitem={item}\n          menu_id={key}\n          is_active={isActive}\n          submenu_toggle={toggleSubMenu}\n          click_on_app={clickOnApp}\n          key={key * 104}\n        />\n      );\n    }\n  };\n\n  const applyTheme = (): ReactNode => {\n    const mergedTheme = {\n      menu_background: theme.backgroundColor || \"#F0F2F6\",\n      txc_inactive: theme.textColor || \"#FFFFFF\",\n      txc_active: theme.textColor || \"#FFFFFF\",\n      option_active: theme.primaryColor || \"#F63366\"\n    };\n\n    const overrideTheme = args.override_theme;\n    if (overrideTheme) {\n      mergedTheme.menu_background = overrideTheme.menu_background || mergedTheme.menu_background;\n      mergedTheme.txc_inactive = overrideTheme.txc_inactive || mergedTheme.txc_inactive;\n      mergedTheme.txc_active = overrideTheme.txc_active || mergedTheme.txc_active;\n      mergedTheme.option_active = overrideTheme.option_active || mergedTheme.option_active;\n    }\n\n    return (\n      <style>\n        {`\n          :root {\n            --menu_background: ${mergedTheme.menu_background};\n            --txc_inactive: ${mergedTheme.txc_inactive};\n            --txc_active: ${mergedTheme.txc_active};\n            --option_active: ${mergedTheme.option_active};\n            --option_active_opacity: ${theme.primaryColor}99;\n            --option_active_translucent: ${theme.primaryColor}66;\n          }\n        `}\n      </style>\n    );\n  };\n\n  const renderNavBar = (): ReactNode => {\n    const menuItems = addHomeLogin();\n    const menuLook = args.use_animation ? \"complexnavbarSupportedContent\" : \"navbarSupportedContent\";\n    const selector = args.use_animation ? (\n      <div className=\"hori-selector\">\n        <div className=\"left\"></div>\n        <div className=\"right\"></div>\n      </div>\n    ) : null;\n\n    return (\n      <div key={args.key}>\n        {applyTheme()}\n        <nav className=\"navbar navbar-expand-custom navbar-mainbg w-100 py-0 py-md-0\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={toggleNav}\n            aria-expanded={expandState}\n          >\n            <i className=\"fas fa-bars text-color\"></i>\n          </button>\n          <div id={menuLook} className=\"navbar-collapse\" style={{ display: blockState }}>\n            <ul className=\"navbar-nav py-0\">\n              {selector}\n              {menuItems.map((item: MenuItem, index: number) => createMenu(item, index))}\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  };\n\n//\n//   if (!document.defineListeners) document.defineListeners = false;\n//   if (!document.clickInside) document.clickInside = false;\n//   const loseFocus = (): void => {\n//     if (!document.defineListeners) {\n//       document.defineListeners = true\n//       document.addEventListener('focusout', event => {\n//         setTimeout(\n//         () => {\n//             if (!document.clickInside) {\n//               console.log(\"FOCUSOUT FIRE\");\n//               setExpandState(false);\n//               setBlockState(\"none\");\n//               setExpandSubMenu(false);\n//               // framed_resize();\n//               delayed_resize(50);\n//             }\n//             document.clickInside = false;\n//         }, 50\n//         )\n//       });\n//       document.addEventListener('click', event => {\n//         document.clickInside = true;\n//       });\n//     }\n//   }\n//   loseFocus();\n  return renderNavBar();\n};\n\n//export default withStreamlitConnection(NavBar);\nexport default NavBar;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport NavBar from \"./NavBar\";\nimport StreamlitProvider from \"./NavBarProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n        <NavBar />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}